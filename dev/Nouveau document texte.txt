==> devtools::check()

Updating ForestData documentation
Writing NAMESPACE
Loading ForestData
Writing NAMESPACE
-- Building -------------------------------------------- ForestData --
Setting env vars:
* CFLAGS    : -Wall -pedantic -fdiagnostics-color=always
* CXXFLAGS  : -Wall -pedantic -fdiagnostics-color=always
* CXX11FLAGS: -Wall -pedantic -fdiagnostics-color=always
----------------------------------------------------------------------
v  checking for file 'C:\Users\nino.page\Desktop\ForestData/DESCRIPTION' (391ms)
-  preparing 'ForestData': (3.6s)
v  checking DESCRIPTION meta-information ... 
-  checking for LF line-endings in source and make files and shell scripts (1.6s)
-  checking for empty or unneeded directories
-  looking to see if a 'data/datalist' file should be added
-  building 'ForestData_0.1.0.tar.gz' (9.2s)
   
-- Checking -------------------------------------------- ForestData --
Setting env vars:
* _R_CHECK_CRAN_INCOMING_USE_ASPELL_: TRUE
* _R_CHECK_CRAN_INCOMING_REMOTE_    : FALSE
* _R_CHECK_CRAN_INCOMING_           : FALSE
* _R_CHECK_FORCE_SUGGESTS_          : FALSE
-- R CMD check -----------------------------------------------------------------
-  using log directory 'C:/Users/nino.page/Desktop/ForestData.Rcheck' (416ms)
-  using R version 3.5.1 (2018-07-02)
-  using platform: x86_64-w64-mingw32 (64-bit)
-  using session charset: ISO8859-1
-  using options '--no-manual --as-cran' (2.4s)
v  checking for file 'ForestData/DESCRIPTION'
-  checking extension type ... Package
-  this is package 'ForestData' version '0.1.0'
-  package encoding: UTF-8
v  checking package namespace information ...
v  checking package dependencies (11.1s)
v  checking if this is a source package ... 
v  checking if there is a namespace
v  checking for executable files ... 
N  checking for hidden files and directories ... 
   Found the following hidden files and directories:
     .travis.yml
   These were most likely included in error. See section 'Package
   structure' in the 'Writing R Extensions' manual.
v  checking for portable file names ... 
v  checking serialization versions
W  checking whether package 'ForestData' can be installed (39.6s)
   Found the following significant warnings:
     Note: possible error in 'correct_alive(data, alive_col = alive_col, ': argument inutilis? (alive_col = alive_col) 
   See 'C:/Users/nino.page/Desktop/ForestData.Rcheck/00install.out' for details.
   Information on the location(s) of code generating the 'Note's can be
   obtained by re-running with environment variable R_KEEP_PKG_SOURCE set
   to 'yes'.
N  checking installed package size ... 
     installed size is 20.9Mb
     sub-directories of 1Mb or more:
       data  20.7Mb
v  checking package directory (503ms)
N  checking DESCRIPTION meta-information (440ms)
   Malformed Description field: should contain one or more complete sentences.
N  checking top-level files
   File
     LICENSE
   is not mentioned in the DESCRIPTION file.
   Non-standard files/directories found at top level:
     'Elie' 'Paracou.RData' 'avancement_09022019.Rmd'
     'avancement_09022019.html' 'dev'
v  checking for left-over files ... 
v  checking index information
v  checking package subdirectories ... 
v  checking R files for non-ASCII characters ... 
v  checking R files for syntax errors ... 
v  checking whether the package can be loaded (439ms)
v  checking whether the package can be loaded with stated dependencies ... 
v  checking whether the package can be unloaded cleanly ... 
v  checking whether the namespace can be loaded with stated dependencies ... 
v  checking whether the namespace can be unloaded cleanly (441ms)
v  checking loading without being on the library search path (720ms)
v  checking dependencies in R code ... 
v  checking S3 generic/method consistency (5.1s)
v  checking replacement functions ... 
v  checking foreign function calls (432ms)
N  checking R code for possible problems (6.9s)
   .correct_abnormal_growth_tree: no visible binding for global variable
     'ladder'
   .correct_abnormal_growth_tree: no visible binding for global variable
     'res'
   .correct_recruits_tree: no visible binding for global variable
     'tree_temp'
   .correct_recruits_tree: no visible binding for global variable 'i'
   .correct_recruits_tree: no visible global function definition for 'lm'
   .correct_size_tree: no visible global function definition for
     'repl_missing'
   .replace_missing: no visible binding for global variable 'time'
   .replace_missing: no visible binding for global variable 'status'
   .replace_missing: no visible global function definition for 'lm'
   check_rename_variable_col: no visible global function definition for
     'past0'
   compute_growth_diameter: no visible global function definition for
     'head'
   compute_recruitment: possible error in correct_alive(data, alive_col =
     alive_col, time_col = time_col): argument inutilis? (alive_col =
     alive_col)
   correct_all: no visible binding for global variable 'corrected_status'
   correct_recruits : <anonymous>: no visible binding for global variable
     'growth_limit'
   correct_recruits: no visible binding for global variable 'growth_limit'
   Undefined global functions or variables:
     corrected_status growth_limit head i ladder lm past0 repl_missing res
     status time tree_temp
   Consider adding
     importFrom("stats", "lm", "time")
     importFrom("utils", "head")
   to your NAMESPACE file.
v  checking Rd files ... 
v  checking Rd metadata ... 
v  checking Rd line widths ... 
v  checking Rd cross-references ... 
W  checking for missing documentation entries (433ms)
   Undocumented code objects:
     'example_alive' 'example_alive_mini' 'expected_2_unseed'
     'expected_2_unseen' 'expected_2_unseen_mini' 'expected_3_unseen'
     'expected_3_unseen_mini' 'outlyers' 'paracou'
   Undocumented data sets:
     'paracou' 'example_alive' 'example_alive_mini' 'expected_2_unseed'
     'expected_2_unseen' 'expected_2_unseen_mini' 'expected_3_unseen'
     'expected_3_unseen_mini' 'outlyers'
   All user-level objects in a package should have documentation entries.
   See chapter 'Writing R documentation files' in the 'Writing R
   Extensions' manual.
v  checking for code/documentation mismatches (5.2s)
W  checking Rd \usage sections ... 
   Undocumented arguments in documentation object 'compute_ba'
     'time_col'
   
   Functions with \usage entries need to have the appropriate \alias
   entries, and all their arguments documented.
   The \usage entries must correspond to syntactically valid R code.
   See chapter 'Writing R documentation files' in the 'Writing R
   Extensions' manual.
v  checking Rd contents (5.5s)
W  checking for unstated dependencies in examples (441ms)
   Warning: erreur d'analyse de code dans le fichier 'ForestData-Ex.R' :
   18: '}' inattendu(e)
   95: plot_col = "Plot",
   96: corrected = TRUE)}
                        ^
v  checking contents of 'data' directory ...
v  checking data for non-ASCII characters (10.6s)
W  checking data for ASCII and uncompressed saves (5m 0.8s)
     
     Note: significantly better compression could be obtained
           by using R CMD build --resave-data
                  old_size new_size compress
     Paracou.rda    20.7Mb   13.7Mb       xz
     outlyers.rda     31Kb     17Kb       xz
E  checking examples (701ms)
   Running examples in 'ForestData-Ex.R' failed
   The error most likely occurred in:
   
   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
   > ### Name: compute_mortality
   > ### Title: Compute Annual Mortality Rates in Forest Inventories
   > ### Aliases: compute_mortality
   > 
   > ### ** Examples
   > 
   > #' \dontrun{
   > data("Paracou6")
   Warning in data("Paracou6") : data set 'Paracou6' not found
   > compute_mortality(Paracou6,
   + status_col="status_corr",
   + time_col="CensusYear",
   + id_col="idTree",
   + dead_confirmation_censuses=2,
   + byplot = TRUE,
   + plot_col = "Plot",
   + corrected = TRUE)}
   Error: unexpected '}' in:
   "plot_col = "Plot",
   corrected = TRUE)}"
   Execution halted
v  checking for unstated dependencies in 'tests' ... 
-  checking tests ...
v  Running 'testthat.R'
   
   See
     'C:/Users/nino.page/Desktop/ForestData.Rcheck/00check.log'
   for details.
   
-- R CMD check results ----------------------------------- ForestData 0.1.0 ----
Duration: 6m 39.7s

> checking examples ... ERROR
  Running examples in 'ForestData-Ex.R' failed
  The error most likely occurred in:
  
  > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
  > ### Name: compute_mortality
  > ### Title: Compute Annual Mortality Rates in Forest Inventories
  > ### Aliases: compute_mortality
  > 
  > ### ** Examples
  > 
  > #' \dontrun{
  > data("Paracou6")
  Warning in data("Paracou6") : data set 'Paracou6' not found
  > compute_mortality(Paracou6,
  + status_col="status_corr",
  + time_col="CensusYear",
  + id_col="idTree",
  + dead_confirmation_censuses=2,
  + byplot = TRUE,
  + plot_col = "Plot",
  + corrected = TRUE)}
  Error: unexpected '}' in:
  "plot_col = "Plot",
  corrected = TRUE)}"
  Execution halted

> checking whether package 'ForestData' can be installed ... WARNING
  See below...

> checking for missing documentation entries ... WARNING
  Undocumented code objects:
    'example_alive' 'example_alive_mini' 'expected_2_unseed'
    'expected_2_unseen' 'expected_2_unseen_mini' 'expected_3_unseen'
    'expected_3_unseen_mini' 'outlyers' 'paracou'
  Undocumented data sets:
    'paracou' 'example_alive' 'example_alive_mini' 'expected_2_unseed'
    'expected_2_unseen' 'expected_2_unseen_mini' 'expected_3_unseen'
    'expected_3_unseen_mini' 'outlyers'
  All user-level objects in a package should have documentation entries.
  See chapter 'Writing R documentation files' in the 'Writing R
  Extensions' manual.