% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/display_ba.R
\name{display_ba}
\alias{display_ba}
\title{Display Forest Mortality and Recruitment Data with ggplot2}
\usage{
display_ba(
  basal_area,
  type = "line",
  time_col = "time",
  color_col = "PlotSub",
  faceting = FALSE,
  title = "Basal area per hectare measured at each census",
  subtitle = NULL,
  save_graph = FALSE,
  device = "png",
  path_save = file.path("ForestGraphs", paste0("annual_mortality_recruitment_", type,
    ".png")),
  name = "annual_recruitment_mortality.png",
  create_folder = FALSE,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{basal_area}{data.frame, output of compute_ba, or if obtained another
way, with a column named "basal_area_per_ha" or adding an argument
variable.name, containing the corresponding column name, to the function
call. Note that if the basal_area have been computed other than by plot,
the arguments of this function must be set accordingly.}

\item{type}{character, partially matching one of the following: "line",
"histogram", "bar", "smooth". For the moment, only "line" is implemented,
being the most relevant in this case. Corresponds to the type of graph to
be done, for examples see \code{ggplot2} examples for \code{geom_line},
\code{geom_histogram}, \code{geom_bar} and \code{geom_smooth}.}

\item{time_col}{Character, name of the column corresponding to census time}

\item{color_col}{Character, name of the colomn used to define lines' colors,
defaults to "Plot".}

\item{faceting}{Character, name of the variable used for faceting -see after-
but defaults to FALSE i.e. no faceting. NB: faceting refers to using a
grouping variable to layout multiple plots, each corresponding to a
category of the grouping variable. See details for a pratical explanation.
The scales are free on the x axis: t correspond to several groups not
necessarily having the same censusing temporal resolution; but are bound on
the y-axis: the values are displayed on the same scale for comparison
purposes.}

\item{title}{Character,title of the graph.}

\item{subtitle}{Character, subtitle of the graph. Defaults to \code{NULL}}

\item{save_graph}{Logical, indicates whether the graph must be saved or not.
Defaults to \code{FALSE}. If \code{TRUE}, please set the above described
arguments in an appropriate way.}

\item{device}{Relevant if \code{save_graph=TRUE}. Character, the graphical
device to be used to save the graph.}

\item{path_save}{Relevant if \code{save_graph=TRUE}. Character, a path
indicating in which FOLDER the graph has to be saved.}

\item{name}{Relevant if \code{save_graph=TRUE}. Character, the name of the
folder containing the graph. It can be followd by the extension
corresponding to the device - avoid .jpg for the jpeg device, use .jpeg
instead. If the extension is missing, it is automatically added according
to the selected device.}

\item{create_folder}{Relevant if \code{save_graph=TRUE}. Logical, indicated
whether the folders in the given path must be created in case they do not
exist yet, or not.}

\item{overwrite}{Relevant if \code{save_graph=TRUE}. Logical, indicating
whether a file already existing under the same name must be overwritten, or
kept. In the second case, the function aborts with an explicit error
message.}

\item{...}{Additionnal arguments to be passed to inernals, and ggplot2
utilities.}
}
\value{
A \code{ggplot2} graphical object. See
  \code{\link[ggplot2]{ggplot2}}
}
\description{
display_ba take a basal area table, obtained with thes \code{compute_ba}
function, and returns a nice graph according to user-specified parameters.
This function requires the installation of the package
\code{\link[ggplot2]{ggplot2}}.
}
\details{
\strong{\emph{Displaying multiple variables to avoid unreadability}}

Imagine a basal area \code{table} computed for 3 species in 4 different
plots, for 20 censuses, with corresponding columns named \code{"Plot"},
\code{"Species"} and \code{"time"}. Then, imagine displaying it with this
function using \code{type = 'line'}. All this information can be displayed in
one call of display_ba, with different possible combinations:

- One graph per forest plot, with the color of each line segregating species.
This can be done with the arguments \code{color_col = "Species"} and
\code{faceting = "Plot"}.

- One graph per species, with the color of each line segregating plots. The
function call has thus the arguments \code{color_col = "Species"} and
\code{faceting = "Plot"}.

The linetype,defaults to 1 -i.e. solid line- but can also be used to display
additional categories, simply adding e.g. \code{linetype  = "Species"} to the
function call. In this case, it must be done with some caution: if there are
too many categories in the grouping variable, they would hardly -if not
impossibly- be visually segregated by line types.

\strong{\emph{Detail of the additionnal arguments}}

The arguments corresponding to \code{...} here encompass a limited number of
parameters that are \emph{internally set if not specified}. These parameters
are passed to different sub-functions. Here is the detailed list of these
arguments.

\code{x.axis.name} and \code{y.axis.name} are the axis labels to be passed to
\code{ggplot2::xlab} and \code{ggplot2::ylab}

\code{transparence} is the scalar value of \code{alpha} in
\code{ggplot2::geom_*} functions.

\code{linewidth} is the scalar value of \code{size} in
\code{ggplot2::geom_line} -to be used with
\code{type='line'}.

Note that a variable's name -in the dataset- can also be provided to make
vary these parameters according to the data. In such case, these arguments
are passed to \code{ggplot2::aes_string} instead.

display_ba originally uses \code{linetype=1} with \code{type = 'line'}. It
means that linetype is passed to
\code{ggplot2::geom_line} as it is a constant scalar.
In case the user wants to use it to differenciate groups, and use a variable
\code{linetype} they just have to specify e.g.
\code{linetype="variable_name"} and it will be passed to
\code{ggplot2::aes_string} instead.

\code{x.text.angle} and \code{y.text.angle} is the angle of the axis ticks
labels. It is set to be 0 -horizontal- for y and 90 -vertical- for x, because
it helps reading census times by avoiding overlaps. These are passed to
\code{ggplot2::element_text} within \code{ggplot2::theme}.
}
