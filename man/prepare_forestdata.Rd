% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_forestdata.R
\name{prepare_forestdata}
\alias{prepare_forestdata}
\title{Prepare global options to run ForestData more easily}
\usage{
prepare_forestdata(
  data,
  plot_col = getOption("plot_col"),
  id_col = getOption("id_col"),
  time_col = getOption("time_col"),
  status_col = getOption("status_col"),
  size_col = getOption("size_col"),
  measure_type = getOption("measure_type"),
  POM_col = getOption("POM_col")
)
}
\arguments{
\item{data}{data.frame, the forest census dataset that you want to treat with
the ForestData r-package}

\item{plot_col}{character, the name of the column containing plot indices}

\item{id_col}{character, the name of the column containing tree unique ids}

\item{time_col}{character, the name of the column containing census years or
times}

\item{status_col}{character, the name of the column containing tree vital
statuses}

\item{size_col}{character, the name of the column containing tree size
measurements}

\item{measure_type}{character indicating whether measures are circumferences
("C") or diameter ("D")}

\item{POM_col}{character, the name of the column containing Point of
Measurement (POM) values}
}
\value{
NULL, because this function just sets global options to fluidify
  ForestData's usage.
}
\description{
This function counterbalances the high number of arguments in ForestData:
many of these simply correspond to the input dataset column names, and have
to be specified over and over when running each function.
\code{prepare_forestdata} allows the user to specify these column names only
once and then run all the functions without having to do it again
}
